plugins {
	id 'java'
	id 'com.diffplug.spotless' version '6.22.0'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.azatdev'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '20'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.h2database:h2'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.assertj:assertj-core'
	testImplementation 'com.h2database:h2'
	testImplementation 'com.github.javafaker:javafaker:1.0.2'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
  java {
    target 'src/*/java/**/*.java'
    
	removeUnusedImports()
	importOrderFile('spotless.importorder')

    // Cleanthat will refactor your code, but it may break your style: apply it before your formatter
    // cleanthat()          // has its own section below

    eclipse().configFile('spotless.eclipseformat.xml')
    formatAnnotations()
  }
}